import java.io.File;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.lang.reflect.Array;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import java.util.Scanner;

/**
 * @author Olivia Meier
 * @date Mar 20, 2023
 */

public class InsertionSortArray {

	//main method
	public static void main(String[] args) throws IOException {
		
		
		//prompt user to enter file name for inputs
		Scanner input = new Scanner(System.in);
		System.out.print("Enter file name: ");
		String name = input.next();
		File file = new File(name);
	    Scanner array = new Scanner(file);
	    
	    int[] arrS = {};
	    int i = 0;
	    int count = 0;

		while(array.hasNextInt()) {
			count += 1;
		    System.out.println(array.next());
		}
	    
	    arrS = new int[count];
	    
	    while(file.list() != null) {
	    	arrS[i] = array.nextInt();
	    	i++;
	    }
		
	    //print original unsorted array 
	    System.out.println(Arrays.toString(arrS));
	    
	    //start timer
	    long begin = System.nanoTime();
	    
	    //call method to sort array
		insertionsort(arrS.length - 1, arrS);
		
		//end timer
		long end = System.nanoTime();
		
		//calculate total time
		long time = end - begin;
		System.out.println("The amount of time Insertion Sort took using an array is " + time + " nano seconds");
		
		//print new sorted array 
		System.out.println(Arrays.toString(arrS));
		
	}
	
	//insertion sort method
	public static void insertionsort(int n, int[] S) {
	
		int i;
		int j;
		int x;
		
		for (i = 2; i <= n; i++) {
			x = S[i];
			j = i - 1;
			while(j > 0 && S[j] > x) {
				S[j + 1] = S[j];
				j--;	
			}	
			S[j + 1] = x;
		}
		
	}
	
}
