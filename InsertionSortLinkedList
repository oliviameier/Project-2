
	/******************************************************************************
	Author: Eugene Onchagwa
	Name: InsertionSort using Linked List
	Date: 20 March 2023
	Class: COMSC.340 Analysis of Algorithm
	*******************************************************************************/
	import java.io.File;
	import java.io.FileNotFoundException;
	import java.util.Scanner;

	public class LinkedList {
	    
	    Node head;
	    int size;
	    
	    private class Node {
	        int value;
	        Node next;
	        
	        public Node(int value) {
	            this.value = value;
	            this.next = null;
	        }
	    }
	    
	    public void add(int value) {
	        Node newNode = new Node(value);
	        if (head == null) {
	            head = newNode;
	        } else {
	            Node currentNode = head;
	            while (currentNode.next != null) {
	                currentNode = currentNode.next;
	            }
	            currentNode.next = newNode;
	        }
	        size++;
	    }
	    
	    public void addFromFile(String filename) {
	        File file = new File(filename);
	        try {
	            Scanner scanner = new Scanner(file);
	            while (scanner.hasNextInt()) {
	                int value = scanner.nextInt();
	                add(value);
	            }
	        } catch (FileNotFoundException e) {
	            System.out.println("error");
	        }
	    }
	    
	    public void insertionSort() {
	        if (head == null || head.next == null) {
	            return;
	        }
	        Node newHead = null;
	        Node current = head;
	        while (current != null) {
	            Node next = current.next;
	            if (newHead == null || current.value < newHead.value) {
	                current.next = newHead;
	                newHead = current;
	            } else {
	                Node temp = newHead;
	                while (temp.next != null && current.value >= temp.next.value) {
	                    temp = temp.next;
	                }
	                current.next = temp.next;
	                temp.next = current;
	            }
	            current = next;
	        }
	        head = newHead;
	    }
	    
	    public void printList() {
	        Node currentNode = head;
	        while (currentNode != null) {
	            System.out.print(currentNode.value + " ");
	            currentNode = currentNode.next;
	        }
	        System.out.println();
	    }
	    
	    public static void main(String[] args) {
	        Scanner input = new Scanner(System.in);
	        LinkedList list = new LinkedList();
	        System.out.print("Enter file name: ");
	        String name = input.next();
	        list.addFromFile(name);
	        list.insertionSort();
	        list.printList();
	    }
	}

